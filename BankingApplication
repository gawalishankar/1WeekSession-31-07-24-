//BANKINGACCOUNT CLASS

package BankingApp;

import java.util.List;

class NegativeDepositException extends Exception {
 public NegativeDepositException(String message) {
     super(message);
 }
}

class InsufficientFundsException extends Exception {
 public InsufficientFundsException(String message) {
     super(message);
 }
}

class InvalidAccountException extends Exception {
 public InvalidAccountException(String message) {
     super(message);
 }
}

class BankAccount {
 private double balance;
 private String accountNumber;

 public BankAccount(String accountNumber, double initialBalance) {
     this.accountNumber = accountNumber;
     this.balance = initialBalance;
 }

 public void deposit(double amount) throws NegativeDepositException {
     if (amount < 0) {
         throw new NegativeDepositException("Cannot deposit a negative amount.");
     }
     balance += amount;
 }

 public void withdraw(double amount) throws InsufficientFundsException {
     if (amount > balance) {
         throw new InsufficientFundsException("Insufficient funds.");
     }
     balance -= amount;
 }

 public double getBalance() {
     return balance;
 }

 public static BankAccount validateAccount(String accountNumber, List<BankAccount> accounts) throws InvalidAccountException {
     for (BankAccount account : accounts) {
         if (account.accountNumber.equals(accountNumber)) {
             return account;
         }
     }
     throw new InvalidAccountException("Invalid account number.");
 }
}

// MAIN CLASS


package BankingApp;

import java.util.ArrayList;
import java.util.List;

public class Main {
    public static void main(String[] args) {
        
        List<BankAccount> accounts = new ArrayList<>();
        accounts.add(new BankAccount("123456", 1000));
        accounts.add(new BankAccount("789012", 500));

        try {
            
            BankAccount account = BankAccount.validateAccount("123456", accounts);

            
            account.deposit(200);
            System.out.println("Deposit successful. Current balance: " + account.getBalance());

           
            account.withdraw(1500);
            System.out.println("Withdrawal successful. Current balance: " + account.getBalance());

        } catch (NegativeDepositException | InsufficientFundsException | InvalidAccountException e) {
            System.out.println(e.getMessage());
        }
    }
}
